<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>npm on Indecision</title>
    <link>https://blog.garyyeap.rocks/tags/npm/</link>
    <description>Recent content in npm on Indecision</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 14 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.garyyeap.rocks/tags/npm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NPM 開發測試筆記</title>
      <link>https://blog.garyyeap.rocks/code/npm-development-test/</link>
      <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.garyyeap.rocks/code/npm-development-test/</guid>
      <description>開發 NPM 套件時的測試方式，在開發的套件目錄下
# yarn yarn link # npm npm link 這樣會建立一個 symbolic link 到套件的所有套件的目錄，要查看的話
yarn
cd ~/.config/yarn/link npm，列出設定，找 prefix
npm config ls -l 拿到 prefix 後
cd {prefix}/lib/node_modules 在想測試該套件的應用/套件目錄下
# yarn yarn link &amp;lt;package name&amp;gt; # npm npm link &amp;lt;package name&amp;gt; 基本上就等於“安裝”完成了，可以開始測試，在開發的套件裡面做的改變會即時反應到想用來測試的應用/套件上
測試完畢後，在測試的應用/套件上“解除安裝”
# yarn yarn unlink &amp;lt;package name&amp;gt; # npm npm unlink &amp;lt;package name&amp;gt; 從 npm 主目錄上移除開發完畢的套件
# yarn yarn unlink # npm npm unlink 如果想要在 global 環境測試，可以先確認套件是不是已經在 global 目錄</description>
    </item>
    
  </channel>
</rss>
