<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>寫扣 on Indecision</title>
    <link>https://blog.garyyeap.rocks/categories/%E5%AF%AB%E6%89%A3/</link>
    <description>Recent content in 寫扣 on Indecision</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 10 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.garyyeap.rocks/categories/%E5%AF%AB%E6%89%A3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>非典型 Git 教學之爲什麼要用 Git</title>
      <link>https://blog.garyyeap.rocks/code/why-git/</link>
      <pubDate>Thu, 10 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.garyyeap.rocks/code/why-git/</guid>
      <description>最近被問到 Git 是什麼，要怎麼用，然後我就翻了一輪網路上的教學，發現大部分都是直接就教指令要不就是一堆分叉線圖。其實相對於一些初學者來說，學習的動機無非是看到徵人條件裡面有列，要不就是被資深同事之類他人要求來學，而對某部分人來說，背指令或者說生硬的記熟步驟的學習過程其實還蠻無聊的，理解爲什麼要用，有什麼好處其實才是重點，這樣才能學得知所以然，然後就有了這篇文章的出現。
問到 Git 是什麼，大部分的回答都是版本控制工具，但其實以我個人的經驗來說，版本控制功能是到真的有具體產品在線上且很多人使用時才會被用到，一般而言初學者連程式開發都是還在學習階段，更不用談到後續上線維護，所以針對初學者來說，怎麼在學習開發階段就可以好好利用 Git 才是重點。
如果是</description>
    </item>
    
    <item>
      <title>詳解 @babel/plugin-transform-runtime</title>
      <link>https://blog.garyyeap.rocks/code/babel-transfrom-runtime-expained/</link>
      <pubDate>Thu, 29 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.garyyeap.rocks/code/babel-transfrom-runtime-expained/</guid>
      <description>@babel/plugin-transform-runtime 主要是要解決 Polyfill、Helper 和 Regenerator 編譯產生的一些問題，下面會逐一介紹和講解其解決的方法。
Polyfill 有在寫網頁前端的人對這名詞應該都不陌生，如果你丟這個詞去查字典的話，它的解釋是某種填充材料，在 Polyfill 這個名詞出現以前有另一個名詞叫 Shim， 同樣如果去查字典的解釋是墊片，兩者之間有什麼不同呢？舉個例子，假如一面牆上破了一個洞，你用一塊板子釘上去蓋住它那就是 Shim，如果你用補土把它補好補滿那就是 Polyfill，差異在於前者你可以很明顯知道有個不一樣的外來物，後者你不會有感覺。換成程式碼的話，如果要解決不同瀏覽器處理 fullscreen api 差異的問題:
Shim 形式(Source)：
import Fullscreen from &amp;#39;easy-fullscreen&amp;#39;; if (Fullscreen.isEnabled) { fullscreenButton.onclick = function () { // check if is in fullscreen mode  if (Fullscreen.isFullscreen) { // exit fullscreen  Fullscreen.exit(); } else { // request to enter fullscreen  Fullscreen.request(fullscreenElement); } }; } Polyfill 形式：
import &amp;#39;core-js&amp;#39;; if (document.documentElement.requestFullscreen) { fullscreenButton.onclick = function () { if (document.</description>
    </item>
    
  </channel>
</rss>
